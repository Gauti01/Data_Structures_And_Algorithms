#include <stdio.h>
#include<stdlib.h>
struct Node{
    int data;
    struct Node* next;
    };
    
void linkedlisttraversal(struct Node* head){
    struct Node* ptr;
    ptr=head;
    do{
        printf("Element : %d\n",ptr->data);
        ptr=ptr->next;
    }
    while(ptr!=head);
   
}   

struct Node* InsertatFirst(struct Node* head, int data)
{
    struct Node* ptr=(struct Node*)malloc(sizeof(struct Node));
    ptr->data=data;
    struct Node* p=head->next;
    while(p->next!=NULL){
        p=p->next;
    }
    //at this point p is pointing to the last node of this circuler linked std::list<T> ;
    p->next=ptr;
    ptr->next=head;
    head=ptr;
    return head;
     
     
}

int main()
{   struct  Node* head;
    struct  Node* second;
    struct  Node* third;
    struct  Node* fourth;
    //allocate memory for the three nodes
    head=(struct  Node*)malloc(sizeof(struct Node));
    second=(struct  Node*)malloc(sizeof(struct Node));
    third=(struct  Node*)malloc(sizeof(struct Node));
    fourth=(struct  Node*)malloc(sizeof(struct Node));
    //first node and second node
     head->data=4;
     head->next=second;
    //second node and third node
     second->data=3;
     second->next=third;
     
     //second node and third node
     third->data=6;
     third->next=fourth;
     
     //third and foruth node
     fourth->data=1;
     fourth->next=head;
     
     
    // printf("Linkedlist before delection:\n");
    
    head=InsertatFirst(head,80);
     linkedlisttraversal(head);
     
    
     

    return 0;
}
