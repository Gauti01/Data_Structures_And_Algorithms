#include <stdio.h>
#include<stdlib.h>
struct queue{
    int r;
    int f;
    int size;
    int *arr;
};
int isEmpty(struct queue *q){
    //struct queue* q;
    if(q->r==q->f)
    return 1;
    else
    return 0;
    
}

int isFull(struct queue *q){
    //struct queue* q;
    if(q->r==q->size-1)
    return 1;
    else
    return 0;
    
}
void enqueue(struct queue *q,int val){
    //struct queue* q;
    if(isFull(q)){
        printf("This queue is full");
    }
    else{
        q->r++;
        q->arr[q->r]=val;
    }
}

int dequeue(struct queue* q){
    //struct queue* q;
    
    int a=-1;
    if(isEmpty(q)){
        printf("This queue is full");
    }
    else{
        q->f++;
        a=q->arr[q->f];
    }
    return a;
}
int main() {
    struct queue q;
	q.size=10;;
	q.f=q.r=-1;
	q.arr=(int*)malloc(q.size*sizeof(int));
	enqueue(&q,12);
	enqueue(&q,15);
	enqueue(&q,1);
	enqueue(&q,156);
	enqueue(&q,90);
	if(isEmpty(&q)){
	    printf("Queue is empty");
	}
	else
	printf("Queue is not empty");
	while(!isEmpty(&q)){
	int num=dequeue(&q);
	printf("\nThe dequeued element is:%d",num);}
	return 0;
}
