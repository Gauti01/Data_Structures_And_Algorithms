/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include<stdlib.h>
struct Node{
    int data;
    struct Node* next;
    };
void linkedlisttraversal(struct Node* ptr){
    while(ptr!=NULL){
    printf("Element : %d\n",ptr->data);
    ptr=ptr->next;
        
    }
    
}   

struct Node* insertatfirst(struct Node* head, int data){
    struct Node* ptr=(struct Node*)malloc(sizeof(struct Node));
    ptr->next=head;
    ptr->data=data;
    
    return ptr;
    
    
}

struct Node* insertatindex(struct Node* head, int data,int index){
        struct Node* ptr=(struct Node*)malloc(sizeof(struct Node));
        struct Node* p=head;
        int i=0;
        while(i!=index-1)
        {
            p=p->next;
            i++;
        } 
        ptr->data=data;
        ptr->next=p->next;
        p->next=ptr;
        //ptr->data=data;
    return head;  
}
struct Node* insertatEnd(struct Node* head, int data){
        struct Node* ptr=(struct Node*)malloc(sizeof(struct Node));
        ptr->data=data;
        struct Node* p=head;
        int i=0;
        while(p->next!=NULL)
        {
            p=p->next;
            
        } 
        p->next=ptr;
        ptr->next=NULL;
        //ptr->data=data;
    return head;  
}

struct Node* insertatAfter(struct Node* head,struct Node* prevNode, int data){
        struct Node* ptr=(struct Node*)malloc(sizeof(struct Node));
        ptr->data=data;
        
        ptr->next=prevNode->next;
        prevNode->next=ptr;
        
    return head;  
}


int main()
{   struct  Node* head;
    struct  Node* second;
    struct  Node* third;
    struct Node* fourth;
    
    //allocate memory for the three nodes
    head=(struct  Node*)malloc(sizeof(struct Node));
    second=(struct  Node*)malloc(sizeof(struct Node));
    third=(struct  Node*)malloc(sizeof(struct Node));
    fourth=(struct  Node*)malloc(sizeof(struct Node));
    
    //first node and second node
     head->data=10;
     head->next=second;
    //second node and third node
     second->data=7;
     second->next=third;
     
     //second node and third node
     third->data=89;
     third->next=fourth;
     
     //fourth node
     fourth->data=98;
     fourth->next=NULL;
     
     
     printf("Linked list before insertion:\n");
     linkedlisttraversal(head);
     
     //head=insertatfirst(head,56);
     //head=insertatindex(head,78,2);
     //head=insertatEnd(head,176);
     head=insertatAfter(head,second,45);
     printf("Linked list after insertion:\n");
     linkedlisttraversal(head);
     

    return 0;
}
